<?xml version="1.0"?>
<launch>

        <arg name="gui" default="false"/>
        <arg name="parse" default="false"/>    
    	<!-- spawn in Gazebo with GUI -->
	<group unless="$(arg parse)" ns="sailboat"  >
        	<node name="patrol_pid" pkg="usv_navigation" type="patrol_pid.py"/>
		<param name="robot_description" command="$(find xacro)/xacro --inorder $(find usv_sim)/xacro/sailboat.xacro"/>
		<node name="spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model sailboat -param robot_description -x 0 -y 0 -z 0 -R 0 -P 0 -Y 0"/>

		<!-- Load controller configurations (vehicle and arm) from YAML file to parameter server -->
		<rosparam file="$(find usv_sim)/config/sailboat.yaml" command="load"/>

		<!-- Launch low-level PID control for arm 
		     body control will not activate as we expect direct thruster control -->
		<node name="pid_control" pkg="freefloating_gazebo" type="pid_control" output="screen" respawn="true"/>
        	<node name="heading_control" pkg="usv_base_ctrl" type="sailboat_control_heading.py"/>
		<node name="odom_base_tf" pkg="usv_tf" type="world_tf_broadcaster.py"/> 
		<!-- <node name="base_laser_tf" pkg="usv_tf" type="laser_tf_broadcaster"/> -->
		<node pkg="tf" type="static_transform_publisher" name="laser_base_tf" args="0.5 0 0.2 0 0 0 1 base_link boat_diff/base_laser 10" />

		<node name="odom_relay" type="relay" pkg="topic_tools" args="state /odom" />
		<node name="vel_relay" type="relay" pkg="topic_tools" args="/navigation_velocity_smoother/raw_cmd_vel cmd_vel" />
		<!-- GUI interface to control joints -->
			<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" respawn="true" if="$(arg gui)">
				<param name="use_gui" value="True"/>
				<remap from="joint_states" to="joint_setpoint" />        
			</node>
			<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" if="$(arg gui)"/>             

    	</group>
</launch>
