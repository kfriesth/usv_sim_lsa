<?xml version="1.0"?>
<launch>
    <arg name="robot_name"/>
    <arg name="init_pose_x"/>
    <arg name="init_pose_y"/>
    <arg name="init_pose_a"/>
    <arg name="init_pose" value=""/>
    
    <group ns="$(arg robot_name)">
    <node name="patrol_pid" pkg="usv_navigation" type="patrol_pid.py" ns="$(arg robot_name)"/> 
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find usv_sim)/xacro/boat_rudder.xacro"/>
        <node name="spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model $(arg robot_name) -param robot_description -x $(arg init_pose_x) -y $(arg init_pose_y) -z 0.0 -R 0 -P 0 -Y $(arg init_pose_a)"/>
        <!-- Load controller configurations (vehicle and arm) from YAML file to parameter server -->
        <rosparam file="$(find usv_sim)/config/boat_rudder.yaml" command="load"/>

        <!-- Launch low-level PID control for arm 
             body control will not activate as we expect direct thruster control -->
        <node name="pid_control" pkg="freefloating_gazebo" type="pid_control" output="screen" respawn="true"/>

        <node name="control_vel" pkg="usv_base_ctrl" type="rudder_control_heading.py"/>

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="30.0" />
        </node>

        <!-- some relays -->
        <node name="odom_relay" type="relay" pkg="topic_tools" args="state odom" />

    </group>

</launch>
